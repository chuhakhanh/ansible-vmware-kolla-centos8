Deploying Playbooks : ansible-playbook -e @/etc/kolla/globals.yml  -e @/etc/kolla/passwords.yml -e CONFIG_DIR=/etc/kolla  -e kolla_action=deploy /venv_kolla/share/kolla-ansible/ansible/site.yml  --inventory ./multinode

PLAY [Gather facts for all hosts] **********************************************

TASK [Gather facts] ************************************************************
ok: [control-1]
ok: [compute-1]
ok: [localhost]

TASK [Group hosts to determine when using --limit] *****************************
ok: [compute-1]
ok: [control-1]
ok: [localhost]

PLAY [Gather facts for all hosts (if using --limit)] ***************************
skipping: no hosts matched

PLAY [Group hosts based on configuration] **************************************

TASK [Group hosts based on Kolla action] ***************************************
ok: [compute-1]
ok: [control-1]
ok: [localhost]

TASK [Group hosts based on enabled services] ***********************************
ok: [control-1] => (item=enable_aodh_False)
ok: [control-1] => (item=enable_barbican_False)
ok: [compute-1] => (item=enable_aodh_False)
ok: [compute-1] => (item=enable_barbican_False)
ok: [control-1] => (item=enable_blazar_False)
ok: [control-1] => (item=enable_ceilometer_False)
ok: [control-1] => (item=enable_ceph_rgw_False)
ok: [control-1] => (item=enable_cinder_False)
ok: [control-1] => (item=enable_cloudkitty_False)
ok: [control-1] => (item=enable_collectd_False)
ok: [control-1] => (item=enable_cyborg_False)
ok: [control-1] => (item=enable_designate_False)
ok: [control-1] => (item=enable_elasticsearch_False)
ok: [control-1] => (item=enable_etcd_False)
ok: [control-1] => (item=enable_freezer_False)
ok: [control-1] => (item=enable_glance_True)
ok: [control-1] => (item=enable_gnocchi_False)
ok: [control-1] => (item=enable_grafana_False)
ok: [control-1] => (item=enable_hacluster_False)
ok: [control-1] => (item=enable_heat_True)
ok: [control-1] => (item=enable_horizon_True)
ok: [control-1] => (item=enable_influxdb_False)
ok: [control-1] => (item=enable_ironic_False)
ok: [control-1] => (item=enable_iscsid_False)
ok: [control-1] => (item=enable_kafka_False)
ok: [control-1] => (item=enable_keystone_True)
ok: [localhost] => (item=enable_aodh_False)
ok: [localhost] => (item=enable_barbican_False)
ok: [localhost] => (item=enable_blazar_False)
ok: [localhost] => (item=enable_ceilometer_False)
ok: [localhost] => (item=enable_ceph_rgw_False)
ok: [localhost] => (item=enable_cinder_False)
ok: [localhost] => (item=enable_cloudkitty_False)
ok: [localhost] => (item=enable_collectd_False)
ok: [localhost] => (item=enable_cyborg_False)
ok: [localhost] => (item=enable_designate_False)
ok: [localhost] => (item=enable_elasticsearch_False)
ok: [localhost] => (item=enable_etcd_False)
ok: [localhost] => (item=enable_freezer_False)
ok: [localhost] => (item=enable_glance_True)
ok: [localhost] => (item=enable_gnocchi_False)
ok: [localhost] => (item=enable_grafana_False)
ok: [localhost] => (item=enable_hacluster_False)
ok: [localhost] => (item=enable_heat_True)
ok: [localhost] => (item=enable_horizon_True)
ok: [localhost] => (item=enable_influxdb_False)
ok: [localhost] => (item=enable_ironic_False)
ok: [localhost] => (item=enable_iscsid_False)
ok: [localhost] => (item=enable_kafka_False)
ok: [compute-1] => (item=enable_blazar_False)
ok: [compute-1] => (item=enable_ceilometer_False)
ok: [compute-1] => (item=enable_ceph_rgw_False)
ok: [compute-1] => (item=enable_cinder_False)
ok: [compute-1] => (item=enable_cloudkitty_False)
ok: [compute-1] => (item=enable_collectd_False)
ok: [compute-1] => (item=enable_cyborg_False)
ok: [compute-1] => (item=enable_designate_False)
ok: [compute-1] => (item=enable_elasticsearch_False)
ok: [compute-1] => (item=enable_etcd_False)
ok: [compute-1] => (item=enable_freezer_False)
ok: [compute-1] => (item=enable_glance_True)
ok: [compute-1] => (item=enable_gnocchi_False)
ok: [compute-1] => (item=enable_grafana_False)
ok: [compute-1] => (item=enable_hacluster_False)
ok: [compute-1] => (item=enable_heat_True)
ok: [compute-1] => (item=enable_horizon_True)
ok: [compute-1] => (item=enable_influxdb_False)
ok: [compute-1] => (item=enable_ironic_False)
ok: [compute-1] => (item=enable_iscsid_False)
ok: [compute-1] => (item=enable_kafka_False)
ok: [compute-1] => (item=enable_keystone_True)
ok: [compute-1] => (item=enable_kibana_False)
ok: [control-1] => (item=enable_kibana_False)
ok: [compute-1] => (item=enable_kuryr_False)
ok: [compute-1] => (item=enable_loadbalancer_False)
ok: [control-1] => (item=enable_kuryr_False)
ok: [compute-1] => (item=enable_magnum_False)
ok: [control-1] => (item=enable_loadbalancer_False)
ok: [control-1] => (item=enable_magnum_False)
ok: [control-1] => (item=enable_manila_False)
ok: [control-1] => (item=enable_mariadb_True)
ok: [control-1] => (item=enable_masakari_False)
ok: [control-1] => (item=enable_memcached_True)
ok: [control-1] => (item=enable_mistral_False)
ok: [control-1] => (item=enable_monasca_False)
ok: [control-1] => (item=enable_multipathd_False)
ok: [control-1] => (item=enable_murano_False)
ok: [control-1] => (item=enable_neutron_True)
ok: [control-1] => (item=enable_nova_True)
ok: [control-1] => (item=enable_octavia_False)
ok: [control-1] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
ok: [control-1] => (item=enable_outward_rabbitmq_False)
ok: [control-1] => (item=enable_ovn_False)
ok: [control-1] => (item=enable_placement_True)
ok: [control-1] => (item=enable_prometheus_False)
ok: [control-1] => (item=enable_qdrouterd_False)
ok: [control-1] => (item=enable_rabbitmq_True)
ok: [control-1] => (item=enable_redis_False)
ok: [control-1] => (item=enable_sahara_False)
ok: [control-1] => (item=enable_senlin_False)
ok: [control-1] => (item=enable_skydive_False)
ok: [control-1] => (item=enable_solum_False)
ok: [control-1] => (item=enable_storm_False)
ok: [control-1] => (item=enable_swift_False)
ok: [control-1] => (item=enable_tacker_False)
ok: [control-1] => (item=enable_telegraf_False)
ok: [control-1] => (item=enable_trove_False)
ok: [control-1] => (item=enable_vitrage_False)
ok: [control-1] => (item=enable_watcher_False)
ok: [control-1] => (item=enable_zookeeper_False)
ok: [control-1] => (item=enable_zun_False)
ok: [localhost] => (item=enable_keystone_True)
ok: [localhost] => (item=enable_kibana_False)
ok: [localhost] => (item=enable_kuryr_False)
ok: [localhost] => (item=enable_loadbalancer_False)
ok: [localhost] => (item=enable_magnum_False)
ok: [localhost] => (item=enable_manila_False)
ok: [localhost] => (item=enable_mariadb_True)
ok: [localhost] => (item=enable_masakari_False)
ok: [localhost] => (item=enable_memcached_True)
ok: [localhost] => (item=enable_mistral_False)
ok: [localhost] => (item=enable_monasca_False)
ok: [localhost] => (item=enable_multipathd_False)
ok: [localhost] => (item=enable_murano_False)
ok: [localhost] => (item=enable_neutron_True)
ok: [localhost] => (item=enable_nova_True)
ok: [localhost] => (item=enable_octavia_False)
ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
ok: [localhost] => (item=enable_outward_rabbitmq_False)
ok: [localhost] => (item=enable_ovn_False)
ok: [localhost] => (item=enable_placement_True)
ok: [localhost] => (item=enable_prometheus_False)
ok: [localhost] => (item=enable_qdrouterd_False)
ok: [localhost] => (item=enable_rabbitmq_True)
ok: [localhost] => (item=enable_redis_False)
ok: [localhost] => (item=enable_sahara_False)
ok: [localhost] => (item=enable_senlin_False)
ok: [localhost] => (item=enable_skydive_False)
ok: [localhost] => (item=enable_solum_False)
ok: [localhost] => (item=enable_storm_False)
ok: [localhost] => (item=enable_swift_False)
ok: [localhost] => (item=enable_tacker_False)
ok: [localhost] => (item=enable_telegraf_False)
ok: [localhost] => (item=enable_trove_False)
ok: [localhost] => (item=enable_vitrage_False)
ok: [localhost] => (item=enable_watcher_False)
ok: [localhost] => (item=enable_zookeeper_False)
ok: [localhost] => (item=enable_zun_False)
ok: [compute-1] => (item=enable_manila_False)
ok: [compute-1] => (item=enable_mariadb_True)
ok: [compute-1] => (item=enable_masakari_False)
ok: [compute-1] => (item=enable_memcached_True)
ok: [compute-1] => (item=enable_mistral_False)
ok: [compute-1] => (item=enable_monasca_False)
ok: [compute-1] => (item=enable_multipathd_False)
ok: [compute-1] => (item=enable_murano_False)
ok: [compute-1] => (item=enable_neutron_True)
ok: [compute-1] => (item=enable_nova_True)
ok: [compute-1] => (item=enable_octavia_False)
ok: [compute-1] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
ok: [compute-1] => (item=enable_outward_rabbitmq_False)
ok: [compute-1] => (item=enable_ovn_False)
ok: [compute-1] => (item=enable_placement_True)
ok: [compute-1] => (item=enable_prometheus_False)
ok: [compute-1] => (item=enable_qdrouterd_False)
ok: [compute-1] => (item=enable_rabbitmq_True)
ok: [compute-1] => (item=enable_redis_False)
ok: [compute-1] => (item=enable_sahara_False)
ok: [compute-1] => (item=enable_senlin_False)
ok: [compute-1] => (item=enable_skydive_False)
ok: [compute-1] => (item=enable_solum_False)
ok: [compute-1] => (item=enable_storm_False)
ok: [compute-1] => (item=enable_swift_False)
ok: [compute-1] => (item=enable_tacker_False)
ok: [compute-1] => (item=enable_telegraf_False)
ok: [compute-1] => (item=enable_trove_False)
ok: [compute-1] => (item=enable_vitrage_False)
ok: [compute-1] => (item=enable_watcher_False)
ok: [compute-1] => (item=enable_zookeeper_False)
ok: [compute-1] => (item=enable_zun_False)

PLAY [Apply role prechecks] ****************************************************
skipping: no hosts matched

PLAY [Apply role common] *******************************************************

TASK [common : include_tasks] **************************************************
included: /venv_kolla/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for control-1, compute-1

TASK [common : Ensuring config directories exist] ******************************
changed: [compute-1] => (item=[{'service_name': 'cron'}, 'cron'])
changed: [control-1] => (item=[{'service_name': 'cron'}, 'cron'])
changed: [compute-1] => (item=[{'service_name': 'fluentd'}, 'fluentd'])
changed: [control-1] => (item=[{'service_name': 'fluentd'}, 'fluentd'])
changed: [compute-1] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
changed: [control-1] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])

TASK [common : Ensure fluentd image is present for label check] ****************
changed: [control-1]
changed: [compute-1]

TASK [common : Fetch fluentd image labels] *************************************
ok: [control-1]
ok: [compute-1]

TASK [common : Set fluentd facts] **********************************************
ok: [control-1]
ok: [compute-1]

TASK [common : include_tasks] **************************************************
skipping: [control-1]
skipping: [compute-1]

TASK [common : Copying over config.json files for services] ********************
changed: [control-1] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-fluentd:victoria', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {}}})
changed: [compute-1] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-fluentd:victoria', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {}}})
changed: [control-1] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-kolla-toolbox:victoria', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/', '/run/openvswitch:/run/openvswitch:shared'], 'dimensions': {}}})
changed: [compute-1] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-kolla-toolbox:victoria', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/', '/run/openvswitch:/run/openvswitch:shared'], 'dimensions': {}}})
changed: [compute-1] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-cron:victoria', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})
changed: [control-1] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-cron:victoria', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})

TASK [common : Find custom fluentd input config files] *************************
ok: [control-1 -> localhost]

TASK [common : Find custom fluentd filter config files] ************************
ok: [control-1 -> localhost]

TASK [common : Find custom fluentd format config files] ************************
ok: [control-1 -> localhost]

TASK [common : Find custom fluentd output config files] ************************
ok: [control-1 -> localhost]

TASK [common : Copying over td-agent.conf] *************************************
changed: [control-1]
changed: [compute-1]

TASK [common : Copying over cron logrotate config file] ************************
changed: [control-1]
changed: [compute-1]

TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
changed: [control-1]
changed: [compute-1]

TASK [common : Ensuring config directories have correct owner and permission] ***
ok: [control-1] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-fluentd:victoria', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {}}})
ok: [compute-1] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-fluentd:victoria', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {}}})
skipping: [control-1] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-kolla-toolbox:victoria', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/', '/run/openvswitch:/run/openvswitch:shared'], 'dimensions': {}}}) 
skipping: [compute-1] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-kolla-toolbox:victoria', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/', '/run/openvswitch:/run/openvswitch:shared'], 'dimensions': {}}}) 
ok: [control-1] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-cron:victoria', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})
ok: [compute-1] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-cron:victoria', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})

TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
changed: [control-1] => (item=/venv_kolla/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
changed: [compute-1] => (item=/venv_kolla/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)

TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
changed: [control-1] => (item=/venv_kolla/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
changed: [compute-1] => (item=/venv_kolla/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)

TASK [common : Check common containers] ****************************************
changed: [control-1] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-fluentd:victoria', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {}}})
changed: [compute-1] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-fluentd:victoria', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {}}})
changed: [compute-1] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-kolla-toolbox:victoria', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/', '/run/openvswitch:/run/openvswitch:shared'], 'dimensions': {}}})
changed: [control-1] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-kolla-toolbox:victoria', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/', '/run/openvswitch:/run/openvswitch:shared'], 'dimensions': {}}})
changed: [compute-1] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-cron:victoria', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})
changed: [control-1] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-cron:victoria', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}}})

TASK [common : Creating log volume] ********************************************
changed: [control-1]
changed: [compute-1]

TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
changed: [control-1]
changed: [compute-1]

TASK [common : Flush handlers] *************************************************

RUNNING HANDLER [common : Restart fluentd container] ***************************
changed: [control-1]
changed: [compute-1]

RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
changed: [control-1]
changed: [compute-1]

RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
ok: [control-1]
ok: [compute-1]

RUNNING HANDLER [common : Restart cron container] ******************************
changed: [compute-1]
changed: [control-1]

PLAY [Apply role loadbalancer] *************************************************
skipping: no hosts matched

PLAY [Apply role collectd] *****************************************************
skipping: no hosts matched

PLAY [Apply role zookeeper] ****************************************************
skipping: no hosts matched

PLAY [Apply role influxdb] *****************************************************
skipping: no hosts matched

PLAY [Apply role telegraf] *****************************************************
skipping: no hosts matched

PLAY [Apply role redis] ********************************************************
skipping: no hosts matched

PLAY [Apply role mariadb] ******************************************************

TASK [mariadb : Group MariaDB hosts based on shards] ***************************
ok: [control-1] => (item=control-1)

TASK [mariadb : include_tasks] *************************************************
included: /venv_kolla/share/kolla-ansible/ansible/roles/mariadb/tasks/deploy.yml for control-1

TASK [mariadb : Ensuring config directories exist] *****************************
changed: [control-1] => (item={'key': 'mariadb', 'value': {'container_name': 'mariadb', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-mariadb-server:victoria', 'volumes': ['/etc/kolla/mariadb/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'mariadb:/var/lib/mysql', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'haproxy': {'mariadb': {'enabled': True, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s', ''], 'custom_member_list': [' server control-1 10.1.17.51:3306 check port 3306 inter 2000 rise 2 fall 5', '']}, 'mariadb_external_lb': {'enabled': False, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'custom_member_list': [' server control-1 control-1:3306 check port 3306 inter 2000 rise 2 fall 5', '']}}}})
skipping: [control-1] => (item={'key': 'mariadb-clustercheck', 'value': {'container_name': 'mariadb_clustercheck', 'group': 'mariadb_shard_0', 'enabled': False, 'image': 'quay.io/openstack.kolla/centos-source-mariadb-clustercheck:victoria', 'volumes': ['/etc/kolla/mariadb-clustercheck/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.1.17.51', 'AVAILABLE_WHEN_DONOR': '1'}}}) 

TASK [mariadb : Ensuring database backup config directory exists] **************
skipping: [control-1]

TASK [mariadb : Copying over my.cnf for mariabackup] ***************************
skipping: [control-1]

TASK [mariadb : Copying over config.json files for services] *******************
changed: [control-1] => (item={'key': 'mariadb', 'value': {'container_name': 'mariadb', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-mariadb-server:victoria', 'volumes': ['/etc/kolla/mariadb/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'mariadb:/var/lib/mysql', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'haproxy': {'mariadb': {'enabled': True, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s', ''], 'custom_member_list': [' server control-1 10.1.17.51:3306 check port 3306 inter 2000 rise 2 fall 5', '']}, 'mariadb_external_lb': {'enabled': False, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'custom_member_list': [' server control-1 control-1:3306 check port 3306 inter 2000 rise 2 fall 5', '']}}}})
skipping: [control-1] => (item={'key': 'mariadb-clustercheck', 'value': {'container_name': 'mariadb_clustercheck', 'group': 'mariadb_shard_0', 'enabled': False, 'image': 'quay.io/openstack.kolla/centos-source-mariadb-clustercheck:victoria', 'volumes': ['/etc/kolla/mariadb-clustercheck/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.1.17.51', 'AVAILABLE_WHEN_DONOR': '1'}}}) 

TASK [mariadb : Copying over config.json files for mariabackup] ****************
skipping: [control-1]

TASK [mariadb : Copying over galera.cnf] ***************************************
changed: [control-1]

TASK [mariadb : Copying over xinetd clustercheck.conf] *************************
skipping: [control-1]

TASK [mariadb : Check mariadb containers] **************************************
changed: [control-1] => (item={'key': 'mariadb', 'value': {'container_name': 'mariadb', 'group': 'mariadb_shard_0', 'enabled': True, 'image': 'quay.io/openstack.kolla/centos-source-mariadb-server:victoria', 'volumes': ['/etc/kolla/mariadb/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'mariadb:/var/lib/mysql', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'haproxy': {'mariadb': {'enabled': True, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s', ''], 'custom_member_list': [' server control-1 10.1.17.51:3306 check port 3306 inter 2000 rise 2 fall 5', '']}, 'mariadb_external_lb': {'enabled': False, 'mode': 'tcp', 'port': '3306', 'listen_port': '3306', 'frontend_tcp_extra': ['option clitcpka', 'timeout client 3600s'], 'backend_tcp_extra': ['option srvtcpka', 'timeout server 3600s'], 'custom_member_list': [' server control-1 control-1:3306 check port 3306 inter 2000 rise 2 fall 5', '']}}}})
skipping: [control-1] => (item={'key': 'mariadb-clustercheck', 'value': {'container_name': 'mariadb_clustercheck', 'group': 'mariadb_shard_0', 'enabled': False, 'image': 'quay.io/openstack.kolla/centos-source-mariadb-clustercheck:victoria', 'volumes': ['/etc/kolla/mariadb-clustercheck/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {}, 'environment': {'MYSQL_USERNAME': 'haproxy', 'MYSQL_PASSWORD': '', 'MYSQL_HOST': '10.1.17.51', 'AVAILABLE_WHEN_DONOR': '1'}}}) 

TASK [mariadb : Create MariaDB volume] *****************************************
changed: [control-1]

TASK [mariadb : Divide hosts by their MariaDB volume availability] *************
ok: [control-1]

TASK [mariadb : Establish whether the cluster has already existed] *************
ok: [control-1]

TASK [mariadb : Check MariaDB service port liveness] ***************************
fatal: [control-1]: FAILED! => {"changed": false, "elapsed": 10, "msg": "Timeout when waiting for search string MariaDB in 10.1.17.51:3306"}
...ignoring

TASK [mariadb : Divide hosts by their MariaDB service port liveness] ***********
ok: [control-1]

TASK [mariadb : Fail on existing but stopped cluster] **************************
skipping: [control-1]

TASK [mariadb : Check MariaDB service WSREP sync status] ***********************
skipping: [control-1]

TASK [mariadb : Extract MariaDB service WSREP sync status] *********************
skipping: [control-1]

TASK [mariadb : Divide hosts by their MariaDB service WSREP sync status] *******
ok: [control-1]

TASK [mariadb : Fail when MariaDB services are not synced across the whole cluster] ***
skipping: [control-1]

TASK [mariadb : include_tasks] *************************************************
included: /venv_kolla/share/kolla-ansible/ansible/roles/mariadb/tasks/bootstrap_cluster.yml for control-1

TASK [mariadb : Running MariaDB bootstrap container] ***************************
changed: [control-1]

TASK [mariadb : Store bootstrap host name into facts] **************************
ok: [control-1]

TASK [mariadb : include_tasks] *************************************************
skipping: [control-1]

TASK [mariadb : Flush handlers] ************************************************

RUNNING HANDLER [mariadb : Starting first MariaDB container] *******************
changed: [control-1]

RUNNING HANDLER [mariadb : Wait for first MariaDB service port liveness] *******
FAILED - RETRYING: Wait for first MariaDB service port liveness (10 retries left).
ok: [control-1]

RUNNING HANDLER [mariadb : Wait for first MariaDB service to sync WSREP] *******
ok: [control-1]

RUNNING HANDLER [mariadb : Restart MariaDB on existing cluster members] ********
skipping: [control-1] => (item=0) 
skipping: [control-1] => (item=1) 
skipping: [control-1] => (item=2) 
skipping: [control-1] => (item=3) 

RUNNING HANDLER [mariadb : Start MariaDB on new nodes] *************************
skipping: [control-1] => (item=0) 
skipping: [control-1] => (item=1) 
skipping: [control-1] => (item=2) 
skipping: [control-1] => (item=3) 

RUNNING HANDLER [mariadb : Ensure MariaDB is running normally on bootstrap host] ***
included: /venv_kolla/share/kolla-ansible/ansible/roles/mariadb/tasks/restart_services.yml for control-1

RUNNING HANDLER [mariadb : Restart MariaDB container] **************************
changed: [control-1]

RUNNING HANDLER [mariadb : Wait for MariaDB service port liveness] *************
FAILED - RETRYING: Wait for MariaDB service port liveness (10 retries left).
ok: [control-1]

RUNNING HANDLER [mariadb : Wait for MariaDB service to sync WSREP] *************
ok: [control-1]

TASK [mariadb : Creating shard root mysql user] ********************************
ok: [control-1]

TASK [mariadb : Creating mysql monitor user] ***********************************
changed: [control-1]

TASK [mariadb : Creating the Mariabackup database] *****************************
skipping: [control-1]

TASK [mariadb : Creating database backup user and setting permissions] *********
skipping: [control-1]

TASK [mariadb : Granting permissions on Mariabackup database to backup user] ***
skipping: [control-1]

TASK [mariadb : Wait for MariaDB service to be ready through VIP] **************
FAILED - RETRYING: Wait for MariaDB service to be ready through VIP (6 retries left).
FAILED - RETRYING: Wait for MariaDB service to be ready through VIP (5 retries left).
FAILED - RETRYING: Wait for MariaDB service to be ready through VIP (4 retries left).
FAILED - RETRYING: Wait for MariaDB service to be ready through VIP (3 retries left).
FAILED - RETRYING: Wait for MariaDB service to be ready through VIP (2 retries left).
FAILED - RETRYING: Wait for MariaDB service to be ready through VIP (1 retries left).
fatal: [control-1]: FAILED! => {"attempts": 6, "changed": false, "cmd": ["docker", "exec", "mariadb", "mysql", "-h", "10.1.17.50", "-P", "3306", "-u", "root", "-piBX3cFiiBMkudtaRUAcoY8ebGLYOZ9Bl3GW4UWm7", "-e", "show databases;"], "delta": "0:00:03.231734", "end": "2022-01-19 03:35:46.118136", "msg": "non-zero return code", "rc": 1, "start": "2022-01-19 03:35:42.886402", "stderr": "ERROR 2002 (HY000): Can't connect to MySQL server on '10.1.17.50' (115)", "stderr_lines": ["ERROR 2002 (HY000): Can't connect to MySQL server on '10.1.17.50' (115)"], "stdout": "", "stdout_lines": []}

PLAY RECAP *********************************************************************
compute-1                  : ok=23   changed=14   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
control-1                  : ok=51   changed=23   unreachable=0    failed=1    skipped=15   rescued=0    ignored=1   
localhost                  : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Command failed ansible-playbook -e @/etc/kolla/globals.yml  -e @/etc/kolla/passwords.yml -e CONFIG_DIR=/etc/kolla  -e kolla_action=deploy /venv_kolla/share/kolla-ansible/ansible/site.yml  --inventory ./multinode
